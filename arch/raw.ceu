input (int, char&& &&) OS_START;
input (_lp_Media&&, _lp_Event&&) MEDIA_EVENT;
input (_lp_Scene&&, _lp_Event&&) SCENE_EVENT;

native/pre do
##include <glib.h>

##define UNSAFE(x) x
##define ELEM_N(V,N) V[N]
end

native @pure _UNSAFE;
native @pure _ELEM_N();

native @nohold _printf ();
native @nohold _free ();

/*********** LibPlay functions *************/
native @nohold _lp_scene_new;
native @nohold _lp_scene_receive;
native @nohold _lp_scene_advance;
native @nohold _lp_media_new;
native @nohold _lp_media_start;
native @nohold _lp_media_stop;
native @nohold _lp_media_abort;
native @nohold _LP_IS_MEDIA;
native @nohold _LP_IS_SCENE;
native @nohold _LP_MEDIA;
native @nohold _LP_SCENE;
native @nohold _lp_event_get_source;

/***********  GLib functions  *************/
native @nohold _g_object_unref;
native @nohold _g_object_set;
native @pure _G_OBJECT;
native @pure _G_OBJECT_TYPE;

/***********    async block   *************/
spawn do
  async do 
    var s64 base, current, tmp;
    base = _g_get_monotonic_time ();
    current = 0;
    tmp = 0;
    loop do
      current = _g_get_monotonic_time ();
      tmp = current - base;
      
      base = current;
      emit (tmp)us;
    end
  end
  await FOREVER;
end
