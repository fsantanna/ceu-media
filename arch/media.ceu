#include "raw.ceu"

native/pre do
    ##include <play.h>
    ##include <stdlib.h>
end

#define MEDIA_FRAME_RATE 2    // 1 fps

#define PERIOD_US (1000000/MEDIA_FRAME_RATE)
#define NS 1000000
#define FREQ 15


/****************     INTERFACES   *********************/
data Rect_Z with
    var int x;
    var int y;
    var int width;
    var int height;
    var int z;
end

class Scene with
  var int width;
  var int height;
  function (void) => _lp_Scene && getptr;
do
  var _lp_Scene &?scene;
  finalize
    scene = &_lp_scene_new (width, height);
  with
    _g_object_unref (_G_OBJECT(&&scene!));
  end

  _g_object_set (&&scene!, "lockstep", true, null);
    
  function (void) => _lp_Scene && getptr do
    return &&scene!;
  end

  spawn do
    async (scene) do
      loop do 
        var _GObject &&obj = null;
        var _lp_Event evt = 0;
        if (_lp_scene_pop (&&scene!, false, &&obj, &&evt)) then
          if _LP_IS_MEDIA (obj) then
            emit MEDIA_EVENT => (_LP_MEDIA(obj), evt);
          else/if _LP_IS_SCENE (obj) then
            emit SCENE_EVENT => (_LP_SCENE(obj), evt);
          end
        end
      end
    end
    await FOREVER;
  end

  every FREQ ms do
    _lp_scene_advance (&&scene!, FREQ * NS);
  end
end


class Media with
    var char&     uri;
    var Rect_Z&   region;
    var Scene&    scene;

    function (Rect_Z r) => void setRegion;
    function (char && name, float value) => void setPropertyFloat;
    function (char && name, int value) => void setPropertyInt;
do
  var _lp_Media &?m;
  finalize
    m = &_lp_media_new (this.scene.getptr(), _UNSAFE(&&this.uri));
  with
    _lp_media_stop (&&m!);
  end
  _printf ("_lp_media_new: %p\n", &&m!);

  setRegion (region);
    
  _lp_media_start (&&m!);

  function (Rect_Z r) => void setRegion do
    region = r;
    _g_object_set (&&m!, "x", region.x, "y", region.y,
        "z", region.z, "width", region.width, 
        "height", region.height, null);
  end
  
  function (char&& name, float value) => void setPropertyFloat do
    _g_object_set (&&m!, name, value, null);
  end

  function (char&& name, int value) => void setPropertyInt do
    _g_object_set (&&m!, name, value, null);
  end
 
  await FOREVER;
end

