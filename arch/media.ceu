#include "raw.ceu"

native/pre do
    ##include <play.h>
    ##include <stdlib.h>
end

#define MEDIA_FRAME_RATE 2    // 1 fps

#define PERIOD_US (1000000/MEDIA_FRAME_RATE)
#define NS 1000000
#define FREQ 15

data Rect_Z with
    var int x;
    var int y;
    var int width;
    var int height;
    var int z;
end

class Scene with
  var int width;
  var int height;
  function (void) => _lp_Scene && getptr;
do
  var _lp_Scene &?scene;
  finalize
    scene = &_lp_scene_new (width, height);
  with
    _g_object_unref (_G_OBJECT(&&scene!));
  end

  _g_object_set (&&scene!, "lockstep", true, null);
    
  function (void) => _lp_Scene && getptr do
    return &&scene!;
  end

  spawn do
    async (scene) do
      loop do 
        var _lp_Event &&evt;
        evt = _UNSAFE(_lp_scene_receive (&&scene!, false)); 
        if evt != null then
          var _GObject &&obj = _UNSAFE(_lp_event_get_source(evt));
          if _LP_IS_MEDIA (obj) then
            emit MEDIA_EVENT => (_LP_MEDIA(obj), evt);
          else/if _LP_IS_SCENE (obj) then
            emit SCENE_EVENT => (_LP_SCENE(obj), evt);
          end
        end
      end
    end
    await FOREVER;
  end

  every FREQ ms do
    _lp_scene_advance (&&scene!, FREQ * NS);
  end
end


class Media with
    var char&     uri;
    var Scene&    scene;

    function (Rect_Z r) => void setRegion;
    function (char && name, float value) => void setPropertyFloat;
    function (char && name, int value) => void setPropertyInt;

    function (void) => void doStart;
    function (void) => void doStop;

    event (void) start;
    event (void) stop;
do
  var _lp_Media &?m;
  finalize
    m = &_lp_media_new (this.scene.getptr(), _UNSAFE(&&this.uri));
  with
    _lp_media_stop (&&m!);
  end

  _lp_media_start (&&m!);

  function (Rect_Z r) => void setRegion do
    _g_object_set (&&m!, "x", r.x, "y", r.y, "z", r.z, 
            "width", r.width, "height", r.height, null);
  end
  
  function (char&& name, float value) => void setPropertyFloat do
    _g_object_set (&&m!, name, value, null);
  end

  function (char&& name, int value) => void setPropertyInt do
    _g_object_set (&&m!, name, value, null);
  end

  function (void) => void doStart do
    _lp_media_start (&&m!); 
  end

  function (void) => void doStop do
    _lp_media_stop (&&m!); 
  end

  loop do
    var _lp_Media &&source;
    var _lp_Event &&evt;
    (source, evt) = await MEDIA_EVENT until (source == &&m!);
    var _GType type = _G_OBJECT_TYPE (evt);
    if type == _LP_TYPE_EVENT_START then
      emit start;
    else/if type == _LP_TYPE_EVENT_STOP then
      emit stop;
    end
  end

end

